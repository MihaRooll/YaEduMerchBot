import logging
import time
from telebot.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from ..auth import role_manager
from ..storage import storage

logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è FSM
user_states = {}

def register_admin_handlers(bot, chat_manager):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥"""
    
    @bot.message_handler(commands=['admin'])
    def handle_admin(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin"""
        user_id = message.from_user.id
        
        if not role_manager.has_permission(user_id, "admin"):
            bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
        bot.send_message(
            chat_id=message.chat.id,
            text="üîê <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
            reply_markup=get_admin_panel_keyboard(),
            parse_mode='HTML'
        )
    
    @bot.message_handler(commands=['adduser'])
    def handle_adduser(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /adduser"""
        user_id = message.from_user.id
        
        if not role_manager.has_permission(user_id, "admin"):
            bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
            return
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[user_id] = {
            'state': 'waiting_for_role',
            'data': {}
        }
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
        _show_role_selection_form(message.chat.id, chat_manager)
    
    @bot.message_handler(commands=['addchat'])
    def handle_addchat(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /addchat - –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π —á–∞—Ç –≤ —Å–∏—Å—Ç–µ–º—É"""
        user_id = message.from_user.id
        chat_id = message.chat.id
        
        logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ {chat_id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ (–∞–¥–º–∏–Ω –∏–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä)
        if not role_manager.has_permission(user_id, "admin") and not role_manager.has_permission(user_id, "coordinator"):
            bot.reply_to(message, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–≤!")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ª–∏—á–Ω—ã–º —á–∞—Ç–æ–º
        if message.chat.type == "private":
            bot.reply_to(message, "‚ùå –ö–æ–º–∞–Ω–¥–∞ /addchat —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö!")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç —á–∞—Ç
        existing_chat = storage.get("chats.json", str(chat_id))
        if existing_chat:
            bot.reply_to(message, "‚úÖ –≠—Ç–æ—Ç —á–∞—Ç —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É!")
            return
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è —á–∞—Ç–∞
        all_chats = storage.get_all("chats.json")
        used_prefixes = set()
        
        # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–Ω–¥–µ–∫—Å—ã
        for chat_info in all_chats.values():
            if chat_info.get('prefix'):
                used_prefixes.add(chat_info.get('prefix'))
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å
        new_prefix = None
        for i in range(26):  # A-Z
            candidate = chr(65 + i)  # ASCII: A=65, B=66, C=67...
            if candidate not in used_prefixes:
                new_prefix = candidate
                break
        
        # –ï—Å–ª–∏ –≤—Å–µ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –∑–∞–Ω—è—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ü–∏—Ñ—Ä—ã
        if not new_prefix:
            for i in range(10):  # 0-9
                candidate = str(i)
                if candidate not in used_prefixes:
                    new_prefix = candidate
                    break
        
        # –ï—Å–ª–∏ –∏ —Ü–∏—Ñ—Ä—ã –∑–∞–Ω—è—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏—é
        if not new_prefix:
            new_prefix = f"X{len(used_prefixes)}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç –≤ —Å–∏—Å—Ç–µ–º—É
        chat_data = {
            "chat_id": str(chat_id),
            "title": message.chat.title or "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è",
            "type": message.chat.type,
            "added_by": user_id,
            "added_at": str(int(time.time())),
            "is_active": True,
            "description": message.chat.description or "",
            "username": message.chat.username or "",
            "prefix": new_prefix
        }
        
        try:
            logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Ç–∞: {chat_data}")
            storage.set("chats.json", str(chat_id), chat_data)
            logger.info(f"–ß–∞—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ storage")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            bot.reply_to(message, f"‚úÖ <b>–ß–∞—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É!</b>\n\n"
                                f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_data['title']}\n"
                                f"üÜî <b>ID:</b> {chat_id}\n"
                                f"üî§ <b>–ò–Ω–¥–µ–∫—Å:</b> {chat_data['prefix']}\n"
                                f"üë§ <b>–î–æ–±–∞–≤–∏–ª:</b> {user_id}\n"
                                f"üìÖ <b>–î–∞—Ç–∞:</b> {time.strftime('%d.%m.%Y %H:%M')}\n\n"
                                f"–¢–µ–ø–µ—Ä—å –±–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç —á–∞—Ç.\n"
                                f"–ó–∞–∫–∞–∑—ã –±—É–¥—É—Ç –∏–º–µ—Ç—å –Ω–æ–º–µ—Ä–∞ –≤–∏–¥–∞: {chat_data['prefix']}-001, {chat_data['prefix']}-002...", 
                                parse_mode='HTML')
            
            # –õ–æ–≥–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
            logger.info(f"–ß–∞—Ç {chat_id} ({chat_data['title']}) –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —á–∞—Ç–∞ {chat_id}: {e}")
            bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —á–∞—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º—É!\n\n–û—à–∏–±–∫–∞: {str(e)}")
    
    @bot.message_handler(func=lambda message: _is_waiting_for_id(message.from_user.id))
    def handle_user_id_input(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ ID/username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_id = message.from_user.id
        
        if user_id not in user_states:
            return
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.delete_message(message.chat.id, message.message_id)
        
        user_input = message.text.strip()
        state_data = user_states[user_id]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if user_input.startswith('@'):
            # –≠—Ç–æ username
            username = user_input
            if len(username) < 3:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —á–∞—Ç–∞
                content = f"‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
                content += f"–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: <b>{state_data['data'].get('selected_role', 'Unknown')}</b>\n\n"
                content += "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç username!</b>\n\n"
                content += "Username –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞.\n\n"
                content += "üìù –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ username:\n\n"
                content += "‚Ä¢ <b>ID:</b> 123456789\n"
                content += "‚Ä¢ <b>Username:</b> @username\n\n"
                content += "üí° –ë–æ—Ç –∂–¥–µ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                
                from ..keyboards import get_back_keyboard
                keyboard = get_back_keyboard("admin_manage_users")
                chat_manager.update_chat_message(message.chat.id, content, keyboard)
                return
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID –¥–ª—è username
            import hashlib
            temp_id = abs(hash(username)) % 1000000000
            state_data['data']['username'] = username  # –°–æ—Ö—Ä–∞–Ω—è–µ–º username –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
            state_data['data']['temp_id'] = temp_id
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            _show_add_user_form_for_username(message.chat.id, chat_manager, temp_id, username)
            
        elif user_input.isdigit():
            # –≠—Ç–æ —á–∏—Å–ª–æ–≤–æ–π ID
            target_user_id = int(user_input)
            if target_user_id < 100000000:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —á–∞—Ç–∞
                content = f"‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
                content += f"–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: <b>{state_data['data'].get('selected_role', 'Unknown')}</b>\n\n"
                content += "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID!</b>\n\n"
                content += "ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 9 —Ü–∏—Ñ—Ä.\n\n"
                content += "üìù –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ username:\n\n"
                content += "‚Ä¢ <b>ID:</b> 123456789\n"
                content += "‚Ä¢ <b>Username:</b> @username\n\n"
                content += "üí° –ë–æ—Ç –∂–¥–µ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                
                from ..keyboards import get_back_keyboard
                keyboard = get_back_keyboard("admin_manage_users")
                chat_manager.update_chat_message(message.chat.id, content, keyboard)
                return
            
            state_data['data']['target_user_id'] = target_user_id
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            _show_add_user_form_for_id(message.chat.id, chat_manager, target_user_id)
            
        else:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —á–∞—Ç–∞
            content = f"‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
            content += f"–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: <b>{state_data['data'].get('selected_role', 'Unknown')}</b>\n\n"
            content += "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!</b>\n\n"
            content += "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID –∏–ª–∏ username (–Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å @)\n\n"
            content += "üìù –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ username:\n\n"
            content += "‚Ä¢ <b>ID:</b> 123456789\n"
            content += "‚Ä¢ <b>Username:</b> @username\n\n"
            content += "üí° –ë–æ—Ç –∂–¥–µ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
            
            from ..keyboards import get_back_keyboard
            keyboard = get_back_keyboard("admin_manage_users")
            chat_manager.update_chat_message(message.chat.id, content, keyboard)
            return
    
    @bot.message_handler(func=lambda message: _is_waiting_for_prefix(message.from_user.id))
    def handle_prefix_input(message):
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º chat_manager –∏–∑ –∑–∞–º—ã–∫–∞–Ω–∏—è
        nonlocal chat_manager
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ —á–∞—Ç–∞"""
        user_id = message.from_user.id
        
        if user_id not in user_states:
            return
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.delete_message(message.chat.id, message.message_id)
        
        user_input = message.text.strip()
        state_data = user_states[user_id]
        target_chat_id = state_data['data'].get('target_chat_id')
        
        if not target_chat_id:
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if len(user_input) < 1 or len(user_input) > 10:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —á–∞—Ç–∞
            content = f"üî§ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ —á–∞—Ç–∞</b>\n\n"
            content += "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–Ω–¥–µ–∫—Å–∞!</b>\n\n"
            content += "–ò–Ω–¥–µ–∫—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 1 –¥–æ 10 —Å–∏–º–≤–æ–ª–æ–≤.\n\n"
            content += "üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å:\n\n"
            content += "üí° <b>–ü—Ä–∏–º–µ—Ä—ã –∏–Ω–¥–µ–∫—Å–æ–≤:</b>\n"
            content += "‚Ä¢ A, B, C, D... (–ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã)\n"
            content += "‚Ä¢ –ê, –ë, –í, –ì... (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)\n"
            content += "‚Ä¢ 1, 2, 3, 4... (—Ü–∏—Ñ—Ä—ã)\n"
            content += "‚Ä¢ –ú–°–ö, –°–ü–ë, –ï–ö–ë... (—Å–æ–∫—Ä–∞—â–µ–Ω–∏—è)\n\n"
            content += "üí° –ë–æ—Ç –∂–¥–µ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
            
            from ..keyboards import get_back_keyboard
            keyboard = get_back_keyboard("admin_settings")
            chat_manager.update_chat_message(message.chat.id, content, keyboard)
            return
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞
        _handle_prefix_change(message.chat.id, user_id, target_chat_id, user_input, chat_manager)
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        del user_states[user_id]

def _is_waiting_for_id(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∂–¥–µ—Ç –ª–∏ –±–æ—Ç –≤–≤–æ–¥–∞ ID –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return user_id in user_states and user_states[user_id]['state'] == 'waiting_for_id'

def _is_waiting_for_prefix(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∂–¥–µ—Ç –ª–∏ –±–æ—Ç –≤–≤–æ–¥–∞ –∏–Ω–¥–µ–∫—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return user_id in user_states and user_states[user_id]['state'] == 'waiting_for_prefix'

def _show_role_selection_form(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    from ..keyboards import get_role_selection_keyboard
    
    content = "‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
    content += "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
    
    keyboard = get_role_selection_keyboard()
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_add_user_form_for_id(chat_id, chat_manager, target_user_id):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è ID"""
    from ..keyboards import get_user_confirm_keyboard, get_back_keyboard
    
    # –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ chat_id
    # –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    role = "admin"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    content = f"‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
    content += f"ID: <b>{target_user_id}</b>\n\n"
    content += "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
    
    keyboard = get_user_confirm_keyboard(str(target_user_id), role)
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_add_user_form_for_username(chat_id, chat_manager, temp_id, username):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è username"""
    from ..keyboards import get_user_confirm_keyboard, get_back_keyboard
    
    # –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ chat_id
    # –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ - –ø–µ—Ä–µ–¥–∞–µ–º chat_id –∫–∞–∫ user_id
    role = "admin"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    content = f"‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
    content += f"Username: <b>{username}</b>\n"
    content += f"–í—Ä–µ–º–µ–Ω–Ω—ã–π ID: <b>{temp_id}</b>\n"
    content += "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID –¥–ª—è username.\n\n"
    content += "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
    
    keyboard = get_user_confirm_keyboard(str(temp_id), role)
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_add_user_form(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_role_selection_keyboard
    
    content = "‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
    content += "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
    
    keyboard = get_role_selection_keyboard()
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_users_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    from ..keyboards import get_users_list_keyboard
    
    users = role_manager.get_all_active_users()
    
    if not users:
        content = "üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        content += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
        keyboard = get_back_keyboard("admin_manage_users")
    else:
        content = "üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        content += f"–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}\n\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        for i, user_data in enumerate(users[:10]):
            role_emoji = {"admin": "üëë", "coordinator": "üß≠", "promo": "üé§", "user": "üë§"}.get(user_data.get('role', 'user'), 'üë§')
            content += f"{i+1}. {role_emoji} <b>{user_data.get('first_name', 'Unknown')}</b> (ID: {user_data.get('user_id')})\n"
            content += f"   –†–æ–ª—å: {user_data.get('role', 'user')}\n\n"
        
        if len(users) > 10:
            content += f"... –∏ –µ—â–µ {len(users) - 10} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        
        keyboard = get_users_list_keyboard(users)
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_search_form(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    from ..keyboards import get_back_keyboard
    
    content = "üîç <b>–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
    content += "–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.\n\n"
    content += "–ü–æ–∫–∞ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_user_statistics(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    from ..keyboards import get_back_keyboard
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Ä—É—á–Ω—É—é
    users = role_manager.get_all_active_users()
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total = len(users)
    admin_count = len([u for u in users if u.get('role') == 'admin'])
    coordinator_count = len([u for u in users if u.get('role') == 'coordinator'])
    promo_count = len([u for u in users if u.get('role') == 'promo'])
    user_count = len([u for u in users if u.get('role') == 'user'])
    blocked_count = len([u for u in users if u.get('blocked', False)])
    
    content = "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
    content += f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total}\n"
    content += f"üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {admin_count}\n"
    content += f"üß≠ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä—ã: {coordinator_count}\n"
    content += f"üé§ –ü—Ä–æ–º–æ: {promo_count}\n"
    content += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {user_count}\n"
    content += f"üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: {blocked_count}\n"
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_block_user_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"""
    from ..keyboards import get_back_keyboard
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users = role_manager.get_all_active_users()
    
    if not users:
        content = "üö´ <b>–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        content += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
        keyboard = get_back_keyboard("admin_manage_users")
    else:
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        active_users = [user for user in users if not user.get('blocked', False)]
        
        if not active_users:
            content = "üö´ <b>–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
            content += "–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã."
            keyboard = get_back_keyboard("admin_manage_users")
        else:
            content = "üö´ <b>–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
            content += f"–ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(active_users)}\n\n"
            content += "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:\n\n"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            for i, user_data in enumerate(active_users[:10]):
                role_emoji = {"admin": "üëë", "coordinator": "üß≠", "promo": "üé§", "user": "üë§"}.get(user_data.get('role', 'user'), 'üë§')
                content += f"{i+1}. {role_emoji} <b>{user_data.get('first_name', 'Unknown')}</b> (ID: {user_data.get('user_id')})\n"
                content += f"   –†–æ–ª—å: {user_data.get('role', 'user')}\n\n"
            
            if len(active_users) > 10:
                content += f"... –∏ –µ—â–µ {len(active_users) - 10} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            keyboard = _create_block_user_keyboard(active_users)
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _create_block_user_keyboard(users: list) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"""
    from ..keyboards import get_back_keyboard
    
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–∞–∫—Å–∏–º—É–º 10)
    for i, user_data in enumerate(users[:10]):
        role_emoji = {"admin": "üëë", "coordinator": "üß≠", "promo": "üé§", "user": "üë§"}.get(user_data.get('role', 'user'), 'üë§')
        name = user_data.get('first_name', 'Unknown')[:20]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
        user_id = user_data.get('user_id')
        
        keyboard.add(InlineKeyboardButton(
            f"{role_emoji} {name} (ID: {user_id})",
            callback_data=f"block_user_{user_id}"
        ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard.add(InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="admin_manage_users"))
    
    return keyboard

def _show_block_confirmation(chat_id, target_user_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_back_keyboard
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = storage.get("users.json", str(target_user_id))
    if not user_data:
        content = "‚ùå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>"
        keyboard = get_back_keyboard("admin_block_user")
    else:
        content = f"üö´ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏</b>\n\n"
        content += f"ID: <b>{target_user_id}</b>\n"
        content += f"–ò–º—è: <b>{user_data.get('first_name', 'Unknown')}</b>\n"
        content += f"–†–æ–ª—å: <b>{user_data.get('role', 'user')}</b>\n\n"
        content += "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?\n\n"
        content += "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞."
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        keyboard = InlineKeyboardMarkup(row_width=2)
        keyboard.add(
            InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_block_{target_user_id}"),
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_block_user"),
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="admin_manage_users")
        )
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _create_unblock_user_keyboard(users: list) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"""
    from ..keyboards import get_back_keyboard
    
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–∞–∫—Å–∏–º—É–º 10)
    for i, user_data in enumerate(users[:10]):
        role_emoji = {"admin": "üëë", "coordinator": "üß≠", "promo": "üé§", "user": "üë§"}.get(user_data.get('role', 'user'), 'üë§')
        name = user_data.get('first_name', 'Unknown')[:20]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
        user_id = user_data.get('user_id')
        
        keyboard.add(InlineKeyboardButton(
            f"{role_emoji} {name} (ID: {user_id})",
            callback_data=f"unblock_user_{user_id}"
        ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard.add(InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="admin_manage_users"))
    
    return keyboard

def _show_unblock_user_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    from ..keyboards import get_back_keyboard
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users = role_manager.get_all_active_users()
    
    if not users:
        content = "‚úÖ <b>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        content += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
        keyboard = get_back_keyboard("admin_manage_users")
    else:
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        blocked_users = [user for user in users if user.get('blocked', False)]
        
        if not blocked_users:
            content = "‚úÖ <b>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
            content += "–ù–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
            keyboard = get_back_keyboard("admin_manage_users")
        else:
            content = "‚úÖ <b>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
            content += f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(blocked_users)}\n\n"
            content += "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:\n\n"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            for i, user_data in enumerate(blocked_users[:10]):
                role_emoji = {"admin": "üëë", "coordinator": "üß≠", "promo": "üé§", "user": "üë§"}.get(user_data.get('role', 'user'), 'üë§')
                content += f"{i+1}. {role_emoji} <b>{user_data.get('first_name', 'Unknown')}</b> (ID: {user_data.get('user_id')})\n"
                content += f"   –†–æ–ª—å: {user_data.get('role', 'user')}\n\n"
            
            if len(blocked_users) > 10:
                content += f"... –∏ –µ—â–µ {len(blocked_users) - 10} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            keyboard = _create_unblock_user_keyboard(blocked_users)
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_change_role_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏"""
    from ..keyboards import get_back_keyboard
    
    content = "üîÑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π</b>\n\n"
    content += "–§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.\n\n"
    content += "–ü–æ–∫–∞ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_chat_management(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞–º–∏"""
    from ..keyboards import get_chat_management_keyboard
    
    content = "üí¨ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞–º–∏</b>\n\n"
    content += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    keyboard = get_chat_management_keyboard()
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_chats_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤"""
    from ..keyboards import get_back_keyboard
    
    chats = storage.get_all("chats.json")
    
    content = "üí¨ <b>–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤</b>\n\n"
    if not chats:
        content += "üìù –ß–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.\n\n"
        content += "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Ç:\n"
        content += "1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –Ω—É–∂–Ω—ã–π —á–∞—Ç\n"
        content += "2. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>/addchat</code> –≤ —á–∞—Ç–µ"
    else:
        content += f"üìä –ù–∞–π–¥–µ–Ω–æ —á–∞—Ç–æ–≤: {len(chats)}\n\n"
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —á–∞—Ç—ã –ø–æ –¥–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        sorted_chats = sorted(chats.items(), 
                             key=lambda x: int(x[1].get('added_at', 0)), 
                             reverse=True)
        
        for i, (chat_id_from_data, chat_data) in enumerate(sorted_chats[:10], 1):
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —á–∞—Ç–∞
            status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if chat_data.get('is_active', True) else "üö´ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø —á–∞—Ç–∞ —Å —ç–º–æ–¥–∑–∏
            chat_type = chat_data.get('type', 'unknown')
            type_emoji = {
                'group': 'üë•',
                'supergroup': 'üë•',
                'channel': 'üì¢',
                'private': 'üë§'
            }.get(chat_type, '‚ùì')
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å —á–∞—Ç–∞
            prefix = chat_data.get('prefix', '‚ùì')
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
            try:
                added_time = int(chat_data.get('added_at', 0))
                date_str = time.strftime('%d.%m.%Y %H:%M', time.localtime(added_time))
            except:
                date_str = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            
            content += f"{i}. {type_emoji} <b>{chat_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}</b>\n"
            content += f"   üÜî ID: {chat_id_from_data}\n"
            content += f"   üî§ –ò–Ω–¥–µ–∫—Å: {prefix}\n"
            content += f"   üìÖ –î–æ–±–∞–≤–ª–µ–Ω: {date_str}\n"
            content += f"   üìä –°—Ç–∞—Ç—É—Å: {status}\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º username –µ—Å–ª–∏ –µ—Å—Ç—å
            if chat_data.get('username'):
                content += f"   üîó @{chat_data.get('username')}\n"
            
            content += "\n"
        
        if len(chats) > 10:
            content += f"... –∏ –µ—â–µ {len(chats) - 10} —á–∞—Ç–æ–≤"
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —á–∞—Ç–æ–≤
        keyboard = _create_chats_list_keyboard(sorted_chats)
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _create_chats_list_keyboard(chats: list) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —á–∞—Ç–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    from ..keyboards import get_back_keyboard
    
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞ (–º–∞–∫—Å–∏–º—É–º 10)
    for i, (chat_id_from_data, chat_data) in enumerate(chats[:10]):
        title = chat_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')[:20]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
        status_emoji = "‚úÖ" if chat_data.get('is_active', True) else "üö´"
        prefix = chat_data.get('prefix', '‚ùì')
        
        keyboard.add(InlineKeyboardButton(
            f"{status_emoji} [{prefix}] {title}",
            callback_data=f"chat_actions_{chat_id_from_data}"
        ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard.add(InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="admin_settings"))
    
    return keyboard

def _show_add_chat_form(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞"""
    from ..keyboards import get_back_keyboard
    
    content = "‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞</b>\n\n"
    content += "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç –≤ —Å–∏—Å—Ç–µ–º—É:\n\n"
    content += "1Ô∏è‚É£ <b>–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –Ω—É–∂–Ω—ã–π —á–∞—Ç</b>\n"
    content += "2Ô∏è‚É£ <b>–°–¥–µ–ª–∞–π—Ç–µ –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b> (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)\n"
    content += "3Ô∏è‚É£ <b>–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É</b> <code>/addchat</code> –≤ —á–∞—Ç–µ\n\n"
    content += "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b>\n"
    content += "‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö\n"
    content += "‚Ä¢ –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞\n"
    content += "‚Ä¢ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —á–∞—Ç–∞\n\n"
    content += "üìù <b>–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:</b>\n"
    content += "‚Ä¢ –ß–∞—Ç –ø–æ—è–≤–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö —á–∞—Ç–æ–≤\n"
    content += "‚Ä¢ –ë–æ—Ç —Å–º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç—É–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
    content += "‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Å–º–æ–≥—É—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —á–∞—Ç–æ–º"
    
    keyboard = get_back_keyboard("admin_manage_chats")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_assign_coordinator_form(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞"""
    from ..keyboards import get_back_keyboard
    
    content = "üß≠ <b>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞</b>\n\n"
    content += "–§—É–Ω–∫—Ü–∏—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.\n\n"
    content += "–ü–æ–∫–∞ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
    
    keyboard = get_back_keyboard("admin_manage_chats")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_chat_actions(chat_id, target_chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è —Å —á–∞—Ç–æ–º"""
    from ..keyboards import get_back_keyboard
    
    chat_data = storage.get("chats.json", str(target_chat_id))
    if not chat_data:
        content = "‚ùå <b>–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>"
        keyboard = get_back_keyboard("admin_manage_chats")
    else:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
        try:
            added_time = int(chat_data.get('added_at', 0))
            date_str = time.strftime('%d.%m.%Y %H:%M', time.localtime(added_time))
        except:
            date_str = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å —á–∞—Ç–∞
        current_prefix = chat_data.get('prefix', '–ù–µ –∑–∞–¥–∞–Ω')
        
        content = f"üí¨ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–æ–º</b>\n\n"
        content += f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
        content += f"üÜî <b>ID:</b> {target_chat_id}\n"
        content += f"üî§ <b>–ò–Ω–¥–µ–∫—Å:</b> {current_prefix}\n"
        content += f"üìÖ <b>–î–æ–±–∞–≤–ª–µ–Ω:</b> {date_str}\n"
        content += f"üë§ <b>–î–æ–±–∞–≤–∏–ª:</b> {chat_data.get('added_by', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
        content += f"üìä <b>–°—Ç–∞—Ç—É—Å:</b> {'‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' if chat_data.get('is_active', True) else 'üö´ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}\n"
        content += f"üîó <b>–¢–∏–ø:</b> {chat_data.get('type', 'unknown')}\n\n"
        
        if chat_data.get('username'):
            content += f"üîó <b>Username:</b> @{chat_data.get('username')}\n\n"
        
        if chat_data.get('description'):
            content += f"üìÑ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {chat_data.get('description')}\n\n"
        
        content += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
        from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
        keyboard = InlineKeyboardMarkup(row_width=2)
        
        if chat_data.get('is_active', True):
            keyboard.add(InlineKeyboardButton("üö´ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"deactivate_chat_{target_chat_id}"))
        else:
            keyboard.add(InlineKeyboardButton("‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"activate_chat_{target_chat_id}"))
        
        keyboard.add(InlineKeyboardButton("üî§ –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω–¥–µ–∫—Å", callback_data=f"change_prefix_{target_chat_id}"))
        keyboard.add(InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_chat_{target_chat_id}"))
        keyboard.add(InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="admin_manage_chats"))
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_orders_management(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏"""
    from ..keyboards import get_back_keyboard
    
    content = "üì¶ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏</b>\n\n"
    content += "–§—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.\n\n"
    content += "–ü–æ–∫–∞ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
    
    keyboard = get_back_keyboard("admin_panel")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_orders_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤"""
    from ..keyboards import get_back_keyboard
    
    content = "üìã <b>–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤</b>\n\n"
    content += "–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.\n\n"
    content += "–ü–æ–∫–∞ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
    
    keyboard = get_back_keyboard("admin_manage_orders")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_orders_statistics(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–∫–∞–∑–æ–≤"""
    from ..keyboards import get_back_keyboard
    
    content = "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤</b>\n\n"
    content += "–§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.\n\n"
    content += "–ü–æ–∫–∞ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
    
    keyboard = get_back_keyboard("admin_manage_orders")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_system_statistics(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    from ..keyboards import get_back_keyboard
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    users = storage.get_all("users.json")
    chats = storage.get_all("chats.json")
    orders = storage.get_all("orders.json")
    inventory = storage.get_all("inventory.json")
    
    content = "üìä <b>–°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n"
    content += f"üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b> {len(users)}\n"
    content += f"üí¨ <b>–ß–∞—Ç—ã:</b> {len(chats)}\n"
    content += f"üì¶ <b>–ó–∞–∫–∞–∑—ã:</b> {len(orders)}\n"
    content += f"üìã <b>–¢–æ–≤–∞—Ä—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ:</b> {len(inventory)}\n\n"
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–æ–ª—è–º
    role_counts = {}
    for user_data in users.values():
        role = user_data.get('role', 'unknown')
        role_counts[role] = role_counts.get(role, 0) + 1
    
    content += "üîë <b>–ü–æ —Ä–æ–ª—è–º:</b>\n"
    for role, count in role_counts.items():
        content += f"  {role}: {count}\n"
    
    keyboard = get_back_keyboard("admin_panel")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _handle_add_role_selection(call, role, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ä–æ–ª–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_back_keyboard
    
    chat_id = call.message.chat.id
    user_id = call.from_user.id
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    user_states[user_id] = {
        'state': 'waiting_for_id',
        'data': {'selected_role': role}
    }
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤–≤–æ–¥–∞ ID/username
    content = f"‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
    content += f"–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: <b>{role}</b>\n\n"
    content += "üìù –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ username:\n\n"
    content += "‚Ä¢ <b>ID:</b> 123456789\n"
    content += "‚Ä¢ <b>Username:</b> @username\n\n"
    content += "üí° –ë–æ—Ç –∂–¥–µ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_input_form(chat_id, role, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –≤–≤–æ–¥–∞ ID/username"""
    from ..keyboards import get_back_keyboard
    
    content = f"‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
    content += f"–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: <b>{role}</b>\n\n"
    content += "üìù –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ username:\n\n"
    content += "‚Ä¢ <b>ID:</b> 123456789\n"
    content += "‚Ä¢ <b>Username:</b> @username\n\n"
    content += "üí° –ë–æ—Ç –∂–¥–µ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _handle_confirm_add_user(call, target_user_id, role, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_back_keyboard
    
    chat_id = call.message.chat.id
    user_id = call.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if user_id not in user_states:
        return
    
    state_data = user_states[user_id]
    username = state_data['data'].get('username')
    selected_role = state_data['data'].get('selected_role', role)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if username and isinstance(username, str) and username.startswith('@'):
        # –î–ª—è username –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID
        success = role_manager.add_user(
            target_user_id, username, username, selected_role, user_id
        )
    else:
        # –î–ª—è —á–∏—Å–ª–æ–≤–æ–≥–æ ID
        success = role_manager.add_user(
            target_user_id, f"User_{target_user_id}", "Unknown", selected_role, user_id
        )
    
    if success:
        content = "‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!</b>\n\n"
        content += f"ID: <b>{target_user_id}</b>\n"
        if username and isinstance(username, str) and username.startswith('@'):
            content += f"Username: <b>{username}</b>\n"
        content += f"–†–æ–ª—å: <b>{selected_role}</b>\n\n"
        content += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞."
    else:
        content = "‚ùå <b>–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!</b>\n\n"
        content += "–í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞."
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    del user_states[user_id]
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_user_actions(chat_id, target_user_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    from ..keyboards import get_user_action_keyboard
    
    user_data = storage.get("users.json", str(target_user_id))
    if not user_data:
        content = "‚ùå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>"
        keyboard = get_back_keyboard("admin_list_users")
    else:
        content = f"üë§ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º</b>\n\n"
        content += f"ID: <b>{target_user_id}</b>\n"
        content += f"–ò–º—è: <b>{user_data.get('first_name', 'Unknown')}</b>\n"
        content += f"–†–æ–ª—å: <b>{user_data.get('role', 'user')}</b>\n"
        content += f"–°—Ç–∞—Ç—É—Å: <b>{'–ê–∫—Ç–∏–≤–µ–Ω' if not user_data.get('blocked', False) else '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}</b>\n\n"
        content += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        
        keyboard = get_user_action_keyboard(target_user_id)
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_role_change_form(chat_id, target_user_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏"""
    from ..keyboards import get_role_change_keyboard
    
    content = f"üîÑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
    content += f"ID: <b>{target_user_id}</b>\n\n"
    content += "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é —Ä–æ–ª—å:"
    
    keyboard = get_role_change_keyboard(target_user_id)
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _handle_role_change(chat_id, user_id, target_user_id, new_role, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_back_keyboard
    
    success = role_manager.update_user_role(target_user_id, new_role, user_id)
    
    if success:
        content = "‚úÖ <b>–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω–µ–Ω–∞!</b>\n\n"
        content += f"ID: <b>{target_user_id}</b>\n"
        content += f"–ù–æ–≤–∞—è —Ä–æ–ª—å: <b>{new_role}</b>"
    else:
        content = "‚ùå <b>–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏!</b>\n\n"
        content += "–í–æ–∑–º–æ–∂–Ω–æ, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞."
    
    keyboard = get_back_keyboard("admin_list_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_block_confirmation(chat_id, target_user_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"""
    from ..keyboards import get_block_confirm_keyboard
    
    user_data = storage.get("users.json", str(target_user_id))
    if not user_data:
        content = "‚ùå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>"
        keyboard = get_back_keyboard("admin_list_users")
    else:
        content = f"üö´ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏</b>\n\n"
        content += f"ID: <b>{target_user_id}</b>\n"
        content += f"–ò–º—è: <b>{user_data.get('first_name', 'Unknown')}</b>\n"
        content += f"–†–æ–ª—å: <b>{user_data.get('role', 'user')}</b>\n\n"
        content += "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?"
        
        keyboard = get_block_confirm_keyboard(target_user_id)
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _handle_user_block(chat_id, user_id, target_user_id, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_back_keyboard
    
    success = role_manager.block_user(target_user_id, user_id, "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
    
    if success:
        content = "‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!</b>\n\n"
        content += f"ID: <b>{target_user_id}</b>\n"
        content += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞."
    else:
        content = "‚ùå <b>–û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏!</b>\n\n"
        content += "–í–æ–∑–º–æ–∂–Ω–æ, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞."
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    keyboard = get_back_keyboard("admin_block_user")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _handle_user_unblock(chat_id, user_id, target_user_id, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_back_keyboard
    
    success = role_manager.unblock_user(target_user_id, user_id)
    
    if success:
        content = "‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!</b>\n\n"
        content += f"ID: <b>{target_user_id}</b>\n"
        content += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞."
    else:
        content = "‚ùå <b>–û—à–∏–±–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏!</b>\n\n"
        content += "–í–æ–∑–º–æ–∂–Ω–æ, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞."
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    keyboard = get_back_keyboard("admin_unblock_user")
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_users_list_page(chat_id, page, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    from ..keyboards import get_pagination_keyboard
    
    users = role_manager.get_all_active_users()
    
    if not users:
        content = "üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        content += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
        keyboard = get_back_keyboard("admin_manage_users")
    else:
        # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
        per_page = 10
        total_pages = (len(users) + per_page - 1) // per_page
        
        if page < 1:
            page = 1
        elif page > total_pages:
            page = total_pages
        
        start_idx = (page - 1) * per_page
        end_idx = start_idx + per_page
        page_users = users[start_idx:end_idx]
        
        content = f"üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        content += f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page} –∏–∑ {total_pages}\n"
        content += f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}\n\n"
        
        for i, user_data in enumerate(page_users, start_idx + 1):
            role_emoji = {"admin": "üëë", "coordinator": "üß≠", "promo": "üé§", "user": "üë§"}.get(user_data.get('role', 'user'), 'üë§')
            content += f"{i}. {role_emoji} <b>{user_data.get('first_name', 'Unknown')}</b> (ID: {user_data.get('user_id')})\n"
            content += f"   –†–æ–ª—å: {user_data.get('role', 'user')}\n\n"
        
        keyboard = get_pagination_keyboard(page, total_pages, "users_page_", "admin_manage_users")
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _handle_chat_deactivate(chat_id, user_id, target_chat_id, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—é —á–∞—Ç–∞"""
    from ..keyboards import get_back_keyboard
    
    chat_data = storage.get("chats.json", str(target_chat_id))
    if not chat_data:
        content = "‚ùå <b>–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>"
        keyboard = get_back_keyboard("admin_manage_chats")
    else:
        # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —á–∞—Ç
        chat_data['is_active'] = False
        chat_data['deactivated_at'] = str(int(time.time()))
        chat_data['deactivated_by'] = user_id
        
        success = storage.set("chats.json", str(target_chat_id), chat_data)
        
        if success:
            content = "üö´ <b>–ß–∞—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>\n\n"
            content += f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
            content += f"üÜî <b>ID:</b> {target_chat_id}\n"
            content += f"üìÖ <b>–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:</b> {time.strftime('%d.%m.%Y %H:%M')}\n\n"
            content += "–ß–∞—Ç –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞."
            
            logger.info(f"–ß–∞—Ç {target_chat_id} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        else:
            content = "‚ùå <b>–û—à–∏–±–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —á–∞—Ç–∞!</b>"
        
        keyboard = get_back_keyboard("admin_manage_chats")
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _handle_chat_activate(chat_id, user_id, target_chat_id, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏—é —á–∞—Ç–∞"""
    from ..keyboards import get_back_keyboard
    
    chat_data = storage.get("chats.json", str(target_chat_id))
    if not chat_data:
        content = "‚ùå <b>–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>"
        keyboard = get_back_keyboard("admin_manage_chats")
    else:
        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —á–∞—Ç
        chat_data['is_active'] = True
        chat_data['activated_at'] = str(int(time.time()))
        chat_data['activated_by'] = user_id
        
        # –£–¥–∞–ª—è–µ–º –ø–æ–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        chat_data.pop('deactivated_at', None)
        chat_data.pop('deactivated_by', None)
        
        success = storage.set("chats.json", str(target_chat_id), chat_data)
        
        if success:
            content = "‚úÖ <b>–ß–∞—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>\n\n"
            content += f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
            content += f"üÜî <b>ID:</b> {target_chat_id}\n"
            content += f"üìÖ <b>–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:</b> {time.strftime('%d.%m.%Y %H:%M')}\n\n"
            content += "–ß–∞—Ç —Å–Ω–æ–≤–∞ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞."
            
            logger.info(f"–ß–∞—Ç {target_chat_id} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        else:
            content = "‚ùå <b>–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —á–∞—Ç–∞!</b>"
        
        keyboard = get_back_keyboard("admin_manage_chats")
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _handle_chat_delete(chat_id, user_id, target_chat_id, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞"""
    from ..keyboards import get_back_keyboard
    
    chat_data = storage.get("chats.json", str(target_chat_id))
    if not chat_data:
        content = "‚ùå <b>–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>"
        keyboard = get_back_keyboard("admin_manage_chats")
    else:
        # –£–¥–∞–ª—è–µ–º —á–∞—Ç
        success = storage.delete("chats.json", str(target_chat_id))
        
        if success:
            content = "üóëÔ∏è <b>–ß–∞—Ç —É–¥–∞–ª–µ–Ω!</b>\n\n"
            content += f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
            content += f"üÜî <b>ID:</b> {target_chat_id}\n"
            content += f"üìÖ <b>–£–¥–∞–ª–µ–Ω:</b> {time.strftime('%d.%m.%Y %H:%M')}\n\n"
            content += "–ß–∞—Ç –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –±–æ—Ç–æ–º."
            
            logger.info(f"–ß–∞—Ç {target_chat_id} —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        else:
            content = "‚ùå <b>–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞!</b>"
        
        keyboard = get_back_keyboard("admin_manage_chats")
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _show_change_prefix_form(chat_id, user_id, target_chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ —á–∞—Ç–∞"""
    from ..keyboards import get_back_keyboard
    
    chat_data = storage.get("chats.json", str(target_chat_id))
    if not chat_data:
        content = "‚ùå <b>–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>"
        keyboard = get_back_keyboard("admin_manage_chats")
    else:
        current_prefix = chat_data.get('prefix', '–ù–µ –∑–∞–¥–∞–Ω')
        
        content = f"üî§ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ —á–∞—Ç–∞</b>\n\n"
        content += f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
        content += f"üÜî <b>ID:</b> {target_chat_id}\n"
        content += f"üî§ <b>–¢–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å:</b> {current_prefix}\n\n"
        content += "üìù <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å:</b>\n\n"
        content += "üí° <b>–ü—Ä–∏–º–µ—Ä—ã –∏–Ω–¥–µ–∫—Å–æ–≤:</b>\n"
        content += "‚Ä¢ A, B, C, D... (–ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã)\n"
        content += "‚Ä¢ –ê, –ë, –í, –ì... (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)\n"
        content += "‚Ä¢ 1, 2, 3, 4... (—Ü–∏—Ñ—Ä—ã)\n"
        content += "‚Ä¢ –ú–°–ö, –°–ü–ë, –ï–ö–ë... (—Å–æ–∫—Ä–∞—â–µ–Ω–∏—è)\n\n"
        content += "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –ò–Ω–¥–µ–∫—Å –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–µ –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞.\n"
        content += "–ù–∞–ø—Ä–∏–º–µ—Ä: A-001, B-002, C-003..."
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
        keyboard = InlineKeyboardMarkup(row_width=1)
        keyboard.add(InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=f"chat_actions_{target_chat_id}"))
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∏–Ω–¥–µ–∫—Å–∞
        user_states[user_id] = {
            'state': 'waiting_for_prefix',
            'data': {'target_chat_id': target_chat_id}
        }
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

def _handle_prefix_change(chat_id, user_id, target_chat_id, new_prefix, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ —á–∞—Ç–∞"""
    from ..keyboards import get_back_keyboard
    
    chat_data = storage.get("chats.json", str(target_chat_id))
    if not chat_data:
        content = "‚ùå <b>–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!</b>"
        keyboard = get_back_keyboard("admin_manage_chats")
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ —É–∂–µ —ç—Ç–æ—Ç –∏–Ω–¥–µ–∫—Å –¥—Ä—É–≥–∏–º —á–∞—Ç–æ–º
        all_chats = storage.get_all("chats.json")
        prefix_conflict = False
        conflicting_chat = None
        
        for chat_id_key, chat_info in all_chats.items():
            if chat_id_key != str(target_chat_id) and chat_info.get('prefix') == new_prefix:
                prefix_conflict = True
                conflicting_chat = chat_info
                break
        
        if prefix_conflict:
            content = "‚ùå <b>–ò–Ω–¥–µ–∫—Å —É–∂–µ –∑–∞–Ω—è—Ç!</b>\n\n"
            content += f"–ò–Ω–¥–µ–∫—Å <b>{new_prefix}</b> —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —á–∞—Ç–æ–º:\n"
            content += f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {conflicting_chat.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
            content += f"üÜî <b>ID:</b> {chat_id_key}\n\n"
            content += "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∏–Ω–¥–µ–∫—Å."
            
            keyboard = InlineKeyboardMarkup(row_width=1)
            keyboard.add(InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=f"change_prefix_{target_chat_id}"))
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å —á–∞—Ç–∞
            old_prefix = chat_data.get('prefix', '–ù–µ –∑–∞–¥–∞–Ω')
            chat_data['prefix'] = new_prefix
            chat_data['prefix_changed_at'] = str(int(time.time()))
            chat_data['prefix_changed_by'] = user_id
            
            success = storage.set("chats.json", str(target_chat_id), chat_data)
            
            if success:
                content = "‚úÖ <b>–ò–Ω–¥–µ–∫—Å —á–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω!</b>\n\n"
                content += f"üìù <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {chat_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
                content += f"üÜî <b>ID:</b> {target_chat_id}\n"
                content += f"üî§ <b>–°—Ç–∞—Ä—ã–π –∏–Ω–¥–µ–∫—Å:</b> {old_prefix}\n"
                content += f"üî§ <b>–ù–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å:</b> {new_prefix}\n"
                content += f"üìÖ <b>–ò–∑–º–µ–Ω–µ–Ω:</b> {time.strftime('%d.%m.%Y %H:%M')}\n\n"
                content += f"–¢–µ–ø–µ—Ä—å –∑–∞–∫–∞–∑—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ –±—É–¥—É—Ç –∏–º–µ—Ç—å –Ω–æ–º–µ—Ä–∞ –≤–∏–¥–∞: {new_prefix}-001, {new_prefix}-002..."
                
                logger.info(f"–ò–Ω–¥–µ–∫—Å —á–∞—Ç–∞ {target_chat_id} –∏–∑–º–µ–Ω–µ–Ω —Å '{old_prefix}' –Ω–∞ '{new_prefix}' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
            else:
                content = "‚ùå <b>–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞!</b>"
            
            keyboard = get_back_keyboard("admin_manage_chats")
    
    chat_manager.update_chat_message(chat_id, content, keyboard)

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
def get_admin_panel_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    from ..keyboards import get_admin_panel_keyboard
    return get_admin_panel_keyboard()

def get_back_keyboard(callback_data):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥"""
    from ..keyboards import get_back_keyboard
    return get_back_keyboard(callback_data)
