import logging
from telebot import TeleBot
from telebot.types import Message, CallbackQuery
from ..auth import role_manager
from ..storage import storage

logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
user_states = {}


def register_admin_handlers(bot: TeleBot, chat_manager):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    
    @bot.message_handler(commands=['admin'])
    def handle_admin(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin"""
        user_id = message.from_user.id
        chat_id = message.chat.id
        
        if not role_manager.has_permission(user_id, "admin"):
            from ..keyboards import get_back_keyboard
            keyboard = get_back_keyboard("back_to_main")
            bot.send_message(
                chat_id=chat_id,
                text="‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!",
                reply_markup=keyboard,
                parse_mode='HTML'
            )
            return
        
        # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï —Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é
        from ..keyboards import get_admin_panel_keyboard
        
        admin_text = "üîê <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>\n\n"
        admin_text += f"üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <b>{message.from_user.first_name or 'Unknown'}</b>\n"
        admin_text += "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
        
        keyboard = get_admin_panel_keyboard()
        
        bot.send_message(
            chat_id=chat_id,
            text=admin_text,
            reply_markup=keyboard,
            parse_mode='HTML'
        )
    
    @bot.message_handler(commands=['adduser'])
    def handle_add_user(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /adduser"""
        user_id = message.from_user.id
        chat_id = message.chat.id
        
        if not role_manager.has_permission(user_id, "admin"):
            from ..keyboards import get_back_keyboard
            keyboard = get_back_keyboard("back_to_main")
            chat_manager.update_chat_message(
                chat_id, 
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", 
                keyboard
            )
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        _show_add_user_form(chat_id, chat_manager)
    
    @bot.message_handler(commands=['users'])
    def handle_list_users(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /users"""
        user_id = message.from_user.id
        chat_id = message.chat.id
        
        if not role_manager.has_permission(user_id, "admin"):
            from ..keyboards import get_back_keyboard
            keyboard = get_back_keyboard("back_to_main")
            chat_manager.update_chat_message(
                chat_id, 
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", 
                keyboard
            )
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        _show_users_list(chat_id, chat_manager)
    
    @bot.message_handler(commands=['stats'])
    def handle_stats(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
        user_id = message.from_user.id
        chat_id = message.chat.id
        
        if not role_manager.has_permission(user_id, "admin"):
            from ..keyboards import get_back_keyboard
            keyboard = get_back_keyboard("back_to_main")
            chat_manager.update_chat_message(
                chat_id, 
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", 
                keyboard
            )
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        chat_manager.show_system_stats(chat_id, user_id)
    
    @bot.message_handler(func=lambda message: _is_waiting_for_id(message.from_user.id))
    def handle_user_id_input(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ ID/username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_id = message.from_user.id
        chat_id = message.chat.id
        user_input = message.text.strip()
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            bot.delete_message(chat_id, message.message_id)
        except:
            pass
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_id not in user_states or user_states[user_id]['state'] != 'waiting_for_id':
            return
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–æ–¥–∞
        target_user_id = None
        username = None
        
        if user_input.startswith('@'):
            # –≠—Ç–æ username
            username = user_input[1:]  # –£–±–∏—Ä–∞–µ–º @
            if len(username) < 3:
                _show_invalid_input_message(chat_id, chat_manager, "Username —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π")
                return
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID –¥–ª—è username
            target_user_id = abs(hash(username)) % 1000000000
        else:
            # –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–≤–æ–π ID
            try:
                target_user_id = int(user_input)
                if target_user_id <= 0:
                    _show_invalid_input_message(chat_id, chat_manager, "ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
                    return
            except ValueError:
                _show_invalid_input_message(chat_id, chat_manager, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID –∏–ª–∏ username")
                return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[user_id]['target_user_id'] = target_user_id
        user_states[user_id]['username'] = username or "unknown"
        
        # –ï—Å–ª–∏ —Ä–æ–ª—å —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é
        if 'selected_role' in user_states[user_id]:
            role = user_states[user_id]['selected_role']
            _show_confirm_add_user(chat_id, chat_manager, target_user_id, username, role)
        else:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
            if username:
                _show_add_user_form_for_username(chat_id, chat_manager, target_user_id, username)
            else:
                _show_add_user_form_for_id(chat_id, chat_manager, target_user_id)
    
    @bot.callback_query_handler(func=lambda call: call.data.startswith('admin_'))
    def admin_callback_handler(call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω—Å–∫–∏—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤"""
        bot.answer_callback_query(call.id)
        
        chat_id = call.message.chat.id
        user_id = call.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if not role_manager.has_permission(user_id, "admin"):
            bot.answer_callback_query(call.id, "‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
            return
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
        if call.data == "admin_panel":
            from ..keyboards import get_admin_panel_keyboard
            content = "üëë <b>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n\n"
            content += "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
            keyboard = get_admin_panel_keyboard()
            chat_manager.update_chat_message(chat_id, content, keyboard)
        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        elif call.data == "admin_manage_users":
            from ..keyboards import get_user_management_keyboard
            content = "üë• <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</b>\n\n"
            content += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
            keyboard = get_user_management_keyboard()
            chat_manager.update_chat_message(chat_id, content, keyboard)
        elif call.data == "admin_add_user":
            _show_add_user_form(chat_id, chat_manager)
        elif call.data == "admin_list_users":
            _show_users_list(chat_id, chat_manager)
        elif call.data == "admin_search_users":
            _show_search_form(chat_id, chat_manager)
        elif call.data == "admin_user_stats":
            _show_user_statistics(chat_id, chat_manager)
        elif call.data == "admin_block_user":
            _show_block_user_list(chat_id, chat_manager)
        elif call.data == "admin_unblock_user":
            _show_unblock_user_list(chat_id, chat_manager)
        elif call.data == "admin_change_role":
            _show_change_role_list(chat_id, chat_manager)
        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞–º–∏
        elif call.data == "admin_manage_chats":
            _show_chat_management(chat_id, chat_manager)
        elif call.data == "admin_list_chats":
            _show_chats_list(chat_id, chat_manager)
        elif call.data == "admin_add_chat":
            _show_add_chat_form(chat_id, chat_manager)
        elif call.data == "admin_assign_coordinator":
            _show_assign_coordinator_form(chat_id, chat_manager)
        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏
        elif call.data == "admin_manage_orders":
            _show_orders_management(chat_id, chat_manager)
        elif call.data == "admin_list_orders":
            _show_orders_list(chat_id, chat_manager)
        elif call.data == "admin_orders_stats":
            _show_orders_statistics(chat_id, chat_manager)
        
        # –°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        elif call.data == "admin_system_stats":
            _show_system_statistics(chat_id, chat_manager)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ–ª–µ–π –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π
        elif call.data.startswith("add_role_"):
            role = call.data.replace("add_role_", "")
            _handle_add_role_selection(chat_id, user_id, role, chat_manager)
        elif call.data.startswith("confirm_add_"):
            parts = call.data.replace("confirm_add_", "").split("_")
            if len(parts) >= 2:
                target_user_id = int(parts[0])
                role = parts[1]
                _handle_confirm_add_user(chat_id, user_id, target_user_id, role, chat_manager)
        
        # –î–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        elif call.data.startswith("user_actions_"):
            target_user_id = call.data.replace("user_actions_", "")
            _show_user_actions(chat_id, target_user_id, chat_manager)
        elif call.data.startswith("change_role_"):
            target_user_id = call.data.replace("change_role_", "")
            _show_role_change_form(chat_id, target_user_id, chat_manager)
        elif call.data.startswith("set_role_"):
            parts = call.data.replace("set_role_", "").split("_")
            if len(parts) >= 2:
                target_user_id = int(parts[0])
                new_role = parts[1]
                _handle_role_change(chat_id, user_id, target_user_id, new_role, chat_manager)
        elif call.data.startswith("block_user_"):
            target_user_id = call.data.replace("block_user_", "")
            _show_block_confirmation(chat_id, target_user_id, chat_manager)
        elif call.data.startswith("confirm_block_"):
            target_user_id = call.data.replace("confirm_block_", "")
            _handle_user_block(chat_id, user_id, int(target_user_id), chat_manager)
        elif call.data.startswith("unblock_user_"):
            target_user_id = call.data.replace("unblock_user_", "")
            _handle_user_unblock(chat_id, user_id, int(target_user_id), chat_manager)
        
        # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
        elif call.data.startswith("users_page_"):
            page = int(call.data.replace("users_page_", ""))
            _show_users_list_page(chat_id, page, chat_manager)


def _show_add_user_form(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_role_selection_keyboard
    
    content = "‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
    content += "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
    
    keyboard = get_role_selection_keyboard()
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_add_user_form_for_id(chat_id, chat_manager, target_user_id):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É —Å –≤—ã–±–æ—Ä–æ–º —Ä–æ–ª–∏ –¥–ª—è —á–∏—Å–ª–æ–≤–æ–≥–æ ID"""
    from ..keyboards import get_role_selection_keyboard
    
    content = f"‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
    content += f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{target_user_id}</code>\n\n"
    content += "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
    
    keyboard = get_role_selection_keyboard()
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_add_user_form_for_username(chat_id, chat_manager, target_user_id, username):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É —Å –≤—ã–±–æ—Ä–æ–º —Ä–æ–ª–∏ –¥–ª—è username"""
    from ..keyboards import get_role_selection_keyboard
    
    content = f"‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
    content += f"Username: @{username}\n"
    content += f"–í—Ä–µ–º–µ–Ω–Ω—ã–π ID: {target_user_id}\n\n"
    content += "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID –¥–ª—è username.\n"
    content += "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
    
    keyboard = get_role_selection_keyboard()
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_confirm_add_user(chat_id, chat_manager, target_user_id, username, role):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_user_confirm_keyboard
    
    role_names = {
        "admin": "üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
        "coordinator": "üîß –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä", 
        "promo": "üì¢ –ü—Ä–æ–º–æ",
        "user": "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    }
    
    content = f"‚úÖ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è</b>\n\n"
    if username and username != "unknown":
        content += f"Username: @{username}\n"
        content += f"–í—Ä–µ–º–µ–Ω–Ω—ã–π ID: {target_user_id}\n"
    else:
        content += f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{target_user_id}</code>\n"
    content += f"–†–æ–ª—å: {role_names.get(role, role)}\n\n"
    content += "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?"
    
    keyboard = get_user_confirm_keyboard(str(target_user_id), role)
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_invalid_input_message(chat_id, chat_manager, error_message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤–≤–æ–¥–∞"""
    from ..keyboards import get_back_keyboard
    
    content = f"‚ùå <b>–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞</b>\n\n"
    content += f"{error_message}\n\n"
    content += "üìù <b>–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>\n\n"
    content += "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ username.\n\n"
    content += "<b>–ü—Ä–∏–º–µ—Ä—ã:</b>\n"
    content += "123456789\n"
    content += "@username\n\n"
    content += "üí° –ë–æ—Ç –∂–¥–µ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_users_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    from ..keyboards import get_back_keyboard
    
    users = role_manager.get_all_active_users()
    
    if not users:
        content = "üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        content += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –Ω–µ—Ç."
    else:
        content = f"üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ({len(users)})</b>\n\n"
        
        role_symbols = {
            "admin": "üëë",
            "coordinator": "üîß", 
            "promo": "üì¢",
            "user": "üë§"
        }
        
        for user in users:
            symbol = role_symbols.get(user["role"], "‚ùì")
            content += f"{symbol} <b>{user['first_name']}</b>\n"
            content += f"   ID: <code>{user['user_id']}</code>\n"
            content += f"   –†–æ–ª—å: {user['role']}\n"
            content += f"   –î–æ–±–∞–≤–ª–µ–Ω: {user.get('added_at', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n\n"
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _handle_add_role_selection(chat_id, user_id, role, chat_manager):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    role_names = {
        "admin": "üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
        "coordinator": "üîß –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä", 
        "promo": "üì¢ –ü—Ä–æ–º–æ",
        "user": "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ä–æ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    user_states[user_id] = {
        'state': 'waiting_for_id',
        'selected_role': role
    }
    
    content = f"‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ {role_names.get(role, role)}</b>\n\n"
    content += f"–†–æ–ª—å: {role_names.get(role, role)}\n\n"
    content += "üìù <b>–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>\n\n"
    content += "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ username.\n\n"
    content += "<b>–ü—Ä–∏–º–µ—Ä—ã:</b>\n"
    content += "123456789\n"
    content += "@username\n\n"
    content += "üí° –ë–æ—Ç –∂–¥–µ—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
    
    from ..keyboards import get_back_keyboard
    keyboard = get_back_keyboard("admin_add_user")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _handle_confirm_add_user(chat_id, user_id, target_user_id, role, chat_manager):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        username = "unknown"
        if user_id in user_states and 'username' in user_states[user_id]:
            username = user_states[user_id]['username']
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        success = role_manager.add_user(
            target_user_id, 
            username, 
            "New User", 
            role, 
            user_id
        )
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        if user_id in user_states:
            del user_states[user_id]
        
        if success:
            content = f"‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω!</b>\n\n"
            content += f"ID: <code>{target_user_id}</code>\n"
            if username != "unknown":
                content += f"Username: @{username}\n"
            content += f"–†–æ–ª—å: {role}\n\n"
            content += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É."
        else:
            content = f"‚ùå <b>–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è</b>\n\n"
            content += f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_user_id}.\n"
            content += "–í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
        
        from ..keyboards import get_back_keyboard
        keyboard = get_back_keyboard("admin_manage_users")
        chat_manager.update_chat_message(chat_id, content, keyboard)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        content = "‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        from ..keyboards import get_back_keyboard
        keyboard = get_back_keyboard("admin_manage_users")
        chat_manager.update_chat_message(chat_id, content, keyboard)


def _is_waiting_for_id(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∂–¥–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∞ ID"""
    return (user_id in user_states and 
            user_states[user_id].get('state') == 'waiting_for_id')


# ===== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò =====

def _show_search_form(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    from ..keyboards import get_back_keyboard
    
    content = "üîç <b>–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
    content += "–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞:\n"
    content += "‚Ä¢ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123456789)\n"
    content += "‚Ä¢ Username (–Ω–∞–ø—Ä–∏–º–µ—Ä: @username)\n"
    content += "‚Ä¢ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n"
    content += "üí° –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º..."
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_user_statistics(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    from ..keyboards import get_back_keyboard
    
    stats = role_manager.get_user_stats()
    
    content = "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
    content += f"üë• <b>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {stats['total_users']}\n"
    content += f"‚úÖ <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö:</b> {stats['active_users']}\n"
    content += f"üö´ <b>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö:</b> {stats['blocked_users']}\n\n"
    
    content += "üîë <b>–ü–æ —Ä–æ–ª—è–º:</b>\n"
    for role, count in stats['by_role'].items():
        role_symbols = {"admin": "üëë", "coordinator": "üîß", "promo": "üì¢", "user": "üë§"}
        symbol = role_symbols.get(role, "‚ùì")
        content += f"  {symbol} {role.capitalize()}: {count}\n"
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_block_user_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"""
    from ..keyboards import get_user_list_keyboard, get_back_keyboard
    
    users = role_manager.get_all_active_users()
    # –ò—Å–∫–ª—é—á–∞–µ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
    active_users = [u for u in users if not u.get('blocked', False)]
    
    if not active_users:
        content = "üö´ <b>–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        content += "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏."
        keyboard = get_back_keyboard("admin_manage_users")
        chat_manager.update_chat_message(chat_id, content, keyboard)
        return
    
    content = f"üö´ <b>–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
    content += f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ ({len(active_users)} –∞–∫—Ç–∏–≤–Ω—ã—Ö):"
    
    keyboard = get_user_list_keyboard(active_users)
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_unblock_user_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    from ..keyboards import get_user_list_keyboard, get_back_keyboard
    
    users = storage.get_all("users.json")
    blocked_users = []
    
    for user_id, user_data in users.items():
        if user_data.get('blocked', False):
            blocked_users.append({"user_id": user_id, **user_data})
    
    if not blocked_users:
        content = "‚úÖ <b>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
        content += "–ù–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
        keyboard = get_back_keyboard("admin_manage_users")
        chat_manager.update_chat_message(chat_id, content, keyboard)
        return
    
    content = f"‚úÖ <b>–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
    content += f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ ({len(blocked_users)} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö):"
    
    keyboard = get_user_list_keyboard(blocked_users)
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_change_role_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏"""
    from ..keyboards import get_user_list_keyboard
    
    users = role_manager.get_all_active_users()
    
    content = f"‚úèÔ∏è <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π</b>\n\n"
    content += f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏ ({len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π):"
    
    keyboard = get_user_list_keyboard(users)
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_user_actions(chat_id, target_user_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    from ..keyboards import get_user_action_keyboard, get_back_keyboard
    
    user_data = storage.get("users.json", target_user_id)
    if not user_data:
        content = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
        keyboard = get_back_keyboard("admin_manage_users")
        chat_manager.update_chat_message(chat_id, content, keyboard)
        return
    
    role_symbols = {"admin": "üëë", "coordinator": "üîß", "promo": "üì¢", "user": "üë§"}
    symbol = role_symbols.get(user_data['role'], "‚ùì")
    blocked_mark = " üö´" if user_data.get('blocked', False) else ""
    
    content = f"üë§ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º</b>\n\n"
    content += f"{symbol} <b>–ò–º—è:</b> {user_data['first_name']}{blocked_mark}\n"
    content += f"üÜî <b>ID:</b> <code>{target_user_id}</code>\n"
    content += f"üë§ <b>Username:</b> @{user_data.get('username', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
    content += f"üîë <b>–†–æ–ª—å:</b> {user_data['role']}\n"
    content += f"üìÖ <b>–î–æ–±–∞–≤–ª–µ–Ω:</b> {user_data.get('added_at', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
    content += f"‚úÖ <b>–ê–∫—Ç–∏–≤–µ–Ω:</b> {'–î–∞' if user_data.get('is_active', False) else '–ù–µ—Ç'}\n"
    
    if user_data.get('blocked', False):
        content += f"üö´ <b>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:</b> {user_data.get('blocked_at', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n"
        if user_data.get('block_reason'):
            content += f"üìù <b>–ü—Ä–∏—á–∏–Ω–∞:</b> {user_data['block_reason']}\n"
    
    keyboard = get_user_action_keyboard(target_user_id)
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_role_change_form(chat_id, target_user_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏"""
    from ..keyboards import get_role_change_keyboard, get_back_keyboard
    
    user_data = storage.get("users.json", target_user_id)
    if not user_data:
        content = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
        keyboard = get_back_keyboard("admin_manage_users")
        chat_manager.update_chat_message(chat_id, content, keyboard)
        return
    
    content = f"‚úèÔ∏è <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏</b>\n\n"
    content += f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user_data['first_name']}\n"
    content += f"üîë <b>–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å:</b> {user_data['role']}\n\n"
    content += "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é —Ä–æ–ª—å:"
    
    keyboard = get_role_change_keyboard(target_user_id)
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _handle_role_change(chat_id, admin_id, target_user_id, new_role, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_back_keyboard
    
    success = role_manager.update_user_role(target_user_id, new_role, admin_id)
    
    if success:
        user_data = storage.get("users.json", str(target_user_id))
        content = f"‚úÖ <b>–†–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞!</b>\n\n"
        content += f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user_data['first_name']}\n"
        content += f"üîë <b>–ù–æ–≤–∞—è —Ä–æ–ª—å:</b> {new_role}\n\n"
        content += "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ."
    else:
        content = f"‚ùå <b>–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏</b>\n\n"
        content += "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n"
        content += "–í–æ–∑–º–æ–∂–Ω–æ, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤."
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_block_confirmation(chat_id, target_user_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"""
    from ..keyboards import get_block_confirm_keyboard, get_back_keyboard
    
    user_data = storage.get("users.json", target_user_id)
    if not user_data:
        content = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
        keyboard = get_back_keyboard("admin_manage_users")
        chat_manager.update_chat_message(chat_id, content, keyboard)
        return
    
    content = f"üö´ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏</b>\n\n"
    content += f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user_data['first_name']}\n"
    content += f"üÜî <b>ID:</b> <code>{target_user_id}</code>\n"
    content += f"üîë <b>–†–æ–ª—å:</b> {user_data['role']}\n\n"
    content += "‚ö†Ô∏è <b>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?</b>\n\n"
    content += "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Ç–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞."
    
    keyboard = get_block_confirm_keyboard(target_user_id)
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _handle_user_block(chat_id, admin_id, target_user_id, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_back_keyboard
    
    success = role_manager.block_user(target_user_id, admin_id, "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
    
    if success:
        user_data = storage.get("users.json", str(target_user_id))
        content = f"üö´ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!</b>\n\n"
        content += f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user_data['first_name']}\n"
        content += f"üÜî <b>ID:</b> <code>{target_user_id}</code>\n\n"
        content += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω."
    else:
        content = f"‚ùå <b>–û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏</b>\n\n"
        content += "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _handle_user_unblock(chat_id, admin_id, target_user_id, chat_manager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    from ..keyboards import get_back_keyboard
    
    success = role_manager.unblock_user(target_user_id, admin_id)
    
    if success:
        user_data = storage.get("users.json", str(target_user_id))
        content = f"‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!</b>\n\n"
        content += f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user_data['first_name']}\n"
        content += f"üÜî <b>ID:</b> <code>{target_user_id}</code>\n\n"
        content += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω."
    else:
        content = f"‚ùå <b>–û—à–∏–±–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏</b>\n\n"
        content += "–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
    
    keyboard = get_back_keyboard("admin_manage_users")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_users_list_page(chat_id, page, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    from ..keyboards import get_user_list_keyboard
    
    users = role_manager.get_all_active_users()
    
    content = f"üë• <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n"
    content += f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1}, –≤—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}"
    
    keyboard = get_user_list_keyboard(users, page)
    chat_manager.update_chat_message(chat_id, content, keyboard)


# ===== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ß–ê–¢–ê–ú–ò =====

def _show_chat_management(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞–º–∏"""
    from ..keyboards import get_chat_management_keyboard
    
    content = "üí¨ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞–º–∏</b>\n\n"
    content += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    keyboard = get_chat_management_keyboard()
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_chats_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤"""
    from ..keyboards import get_back_keyboard
    
    chats = storage.get_all("chats.json")
    
    if not chats:
        content = "üí¨ <b>–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤</b>\n\n"
        content += "–ß–∞—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç."
    else:
        content = f"üí¨ <b>–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ ({len(chats)})</b>\n\n"
        
        for chat_id_str, chat_data in chats.items():
            coordinator_id = chat_data.get('coordinator_id')
            coordinator_name = "–Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω"
            
            if coordinator_id:
                coordinator_data = storage.get("users.json", coordinator_id)
                if coordinator_data:
                    coordinator_name = coordinator_data.get('first_name', 'Unknown')
            
            content += f"üí¨ <b>{chat_data.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}</b>\n"
            content += f"   ID: <code>{chat_id_str}</code>\n"
            content += f"   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä: {coordinator_name}\n"
            content += f"   –ü—Ä–µ—Ñ–∏–∫—Å: {chat_data.get('prefix', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n\n"
    
    keyboard = get_back_keyboard("admin_manage_chats")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_add_chat_form(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞"""
    from ..keyboards import get_back_keyboard
    
    content = "‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞</b>\n\n"
    content += "–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.\n\n"
    content += "–ü–æ–∫–∞ —á—Ç–æ —á–∞—Ç—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö."
    
    keyboard = get_back_keyboard("admin_manage_chats")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_assign_coordinator_form(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞"""
    from ..keyboards import get_back_keyboard
    
    content = "üîß <b>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–≤</b>\n\n"
    content += "–§—É–Ω–∫—Ü–∏—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.\n\n"
    content += "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∫–∞ —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
    
    keyboard = get_back_keyboard("admin_manage_chats")
    chat_manager.update_chat_message(chat_id, content, keyboard)


# ===== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê–ú–ò =====

def _show_orders_management(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏"""
    from ..keyboards import get_back_keyboard
    
    content = "üì¶ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏</b>\n\n"
    content += "–§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏ –±—É–¥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö:\n\n"
    content += "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤\n"
    content += "‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É\n"
    content += "‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤\n"
    content += "‚Ä¢ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–º–æ –Ω–∞ –∑–∞–∫–∞–∑—ã\n"
    content += "‚Ä¢ –ü–µ—Ä–µ–Ω–æ—Å –º–µ–∂–¥—É —á–∞—Ç–∞–º–∏"
    
    keyboard = get_back_keyboard("admin_panel")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_orders_list(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤"""
    from ..keyboards import get_back_keyboard
    
    orders = storage.get_all("orders.json")
    
    content = f"üì¶ <b>–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤</b>\n\n"
    if not orders:
        content += "–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç."
    else:
        content += f"–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders)}\n\n"
        content += "–î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö."
    
    keyboard = get_back_keyboard("admin_panel")
    chat_manager.update_chat_message(chat_id, content, keyboard)


def _show_orders_statistics(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–∫–∞–∑–æ–≤"""
    from ..keyboards import get_back_keyboard
    
    orders = storage.get_all("orders.json")
    
    content = "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤</b>\n\n"
    content += f"üì¶ <b>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤:</b> {len(orders)}\n"
    content += f"üÜï <b>–ù–æ–≤—ã—Ö:</b> 0\n"
    content += f"‚öôÔ∏è <b>–í —Ä–∞–±–æ—Ç–µ:</b> 0\n"
    content += f"‚úÖ <b>–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö:</b> 0\n\n"
    content += "–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö."
    
    keyboard = get_back_keyboard("admin_panel")
    chat_manager.update_chat_message(chat_id, content, keyboard)


# ===== –°–ò–°–¢–ï–ú–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê =====

def _show_system_statistics(chat_id, chat_manager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    from ..keyboards import get_back_keyboard
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    users = storage.get_all("users.json")
    chats = storage.get_all("chats.json")
    orders = storage.get_all("orders.json")
    inventory = storage.get_all("inventory.json")
    
    content = "üìä <b>–°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n"
    content += f"üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b> {len(users)}\n"
    content += f"üí¨ <b>–ß–∞—Ç—ã:</b> {len(chats)}\n"
    content += f"üì¶ <b>–ó–∞–∫–∞–∑—ã:</b> {len(orders)}\n"
    content += f"üìã <b>–¢–æ–≤–∞—Ä—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ:</b> {len(inventory)}\n\n"
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–æ–ª—è–º
    role_counts = {}
    active_users = 0
    blocked_users = 0
    
    for user_data in users.values():
        role = user_data.get('role', 'unknown')
        role_counts[role] = role_counts.get(role, 0) + 1
        
        if user_data.get('is_active', False):
            active_users += 1
        if user_data.get('blocked', False):
            blocked_users += 1
    
    content += "üîë <b>–ü–æ —Ä–æ–ª—è–º:</b>\n"
    for role, count in role_counts.items():
        role_symbols = {"admin": "üëë", "coordinator": "üîß", "promo": "üì¢", "user": "üë§"}
        symbol = role_symbols.get(role, "‚ùì")
        content += f"  {symbol} {role}: {count}\n"
    
    content += f"\n‚úÖ <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {active_users}\n"
    content += f"üö´ <b>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö:</b> {blocked_users}"
    
    keyboard = get_back_keyboard("admin_panel")
    chat_manager.update_chat_message(chat_id, content, keyboard)