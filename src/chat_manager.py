import logging
from typing import Dict, Optional, Any
from telebot import TeleBot
from telebot.types import Message, InlineKeyboardMarkup
from .storage import storage
from .keyboards import get_main_menu_keyboard, get_admin_panel_keyboard

logger = logging.getLogger(__name__)


class ChatManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä —á–∞—Ç–æ–≤ - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Ç, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è"""
    
    def __init__(self, bot: TeleBot):
        self.bot = bot
        self._chat_messages: Dict[str, Dict[str, Any]] = {}  # chat_id -> message_info
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –ë–î
        self._load_existing_messages()
    
    def get_or_create_chat_message(self, chat_id: int, user_id: int, 
                                  role: str) -> Dict[str, Any]:
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–∞—Ç–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
        """
        chat_key = str(chat_id)
        
        if chat_key in self._chat_messages:
            return self._chat_messages[chat_key]
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —á–∞—Ç–∞
        message_info = self._create_chat_message(chat_id, user_id, role)
        self._chat_messages[chat_key] = message_info
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        self._save_chat_message(chat_id, message_info)
        
        return message_info
    
    def _create_chat_message(self, chat_id: int, user_id: int, role: str) -> Dict[str, Any]:
        """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —á–∞—Ç–∞"""
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        if role == "admin":
            content = self._get_admin_content(user_id)
            keyboard = get_admin_panel_keyboard()
        else:
            content = self._get_user_content(user_id, role)
            keyboard = get_main_menu_keyboard(role)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        sent_message = self.bot.send_message(
            chat_id=chat_id,
            text=content,
            reply_markup=keyboard,
            parse_mode='HTML'
        )
        
        return {
            'message_id': sent_message.message_id,
            'chat_id': chat_id,
            'user_id': user_id,
            'role': role,
            'content': content,
            'created_at': 'now'
        }
    
    def update_chat_message(self, chat_id: int, new_content: str, 
                           new_keyboard: InlineKeyboardMarkup) -> bool:
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–∞—Ç–∞
        """
        chat_key = str(chat_id)
        
        if chat_key not in self._chat_messages:
            logger.warning(f"–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —á–∞—Ç–∞ {chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False
        
        message_info = self._chat_messages[chat_key]
        
        try:
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_info['message_id'],
                text=new_content,
                reply_markup=new_keyboard,
                parse_mode='HTML'
            )
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–µ—à
            message_info['content'] = new_content
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–î
            self._update_chat_message(chat_id, message_info)
            
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —á–∞—Ç–∞ {chat_id} –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ {chat_id}: {e}")
            return False
    
    def show_main_menu(self, chat_id: int, user_id: int, role: str) -> bool:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ —á–∞—Ç–µ"""
        content = self._get_user_content(user_id, role)
        keyboard = get_main_menu_keyboard(role)
        
        return self.update_chat_message(chat_id, content, keyboard)
    
    def show_admin_panel(self, chat_id: int, user_id: int) -> bool:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≤ —á–∞—Ç–µ"""
        content = self._get_admin_content(user_id)
        keyboard = get_admin_panel_keyboard()
        
        return self.update_chat_message(chat_id, content, keyboard)
    
    def show_user_management(self, chat_id: int, user_id: int) -> bool:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –≤ —á–∞—Ç–µ"""
        from .keyboards import get_user_management_keyboard, get_back_keyboard
        
        content = "üë• <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        keyboard = get_user_management_keyboard()
        
        return self.update_chat_message(chat_id, content, keyboard)
    
    def show_chat_management(self, chat_id: int, user_id: int) -> bool:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞–º–∏ –≤ —á–∞—Ç–µ"""
        from .keyboards import get_chat_management_keyboard
        
        content = "üí¨ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞–º–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        keyboard = get_chat_management_keyboard()
        
        return self.update_chat_message(chat_id, content, keyboard)
    
    def show_inventory_management(self, chat_id: int, user_id: int) -> bool:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º –≤ —á–∞—Ç–µ"""
        from .keyboards import get_inventory_management_keyboard
        
        content = "üì¶ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        keyboard = get_inventory_management_keyboard()
        
        return self.update_chat_message(chat_id, content, keyboard)
    
    def show_system_stats(self, chat_id: int, user_id: int) -> bool:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ —á–∞—Ç–µ"""
        from .keyboards import get_back_keyboard
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        users = storage.get_all("users.json")
        chats = storage.get_all("chats.json")
        orders = storage.get_all("orders.json")
        inventory = storage.get_all("inventory.json")
        
        content = "üìä <b>–°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\n"
        content += f"üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b> {len(users)}\n"
        content += f"üí¨ <b>–ß–∞—Ç—ã:</b> {len(chats)}\n"
        content += f"üì¶ <b>–ó–∞–∫–∞–∑—ã:</b> {len(orders)}\n"
        content += f"üìã <b>–¢–æ–≤–∞—Ä—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ:</b> {len(inventory)}\n\n"
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–æ–ª—è–º
        role_counts = {}
        for user_data in users.values():
            role = user_data.get('role', 'unknown')
            role_counts[role] = role_counts.get(role, 0) + 1
        
        content += "üîë <b>–ü–æ —Ä–æ–ª—è–º:</b>\n"
        for role, count in role_counts.items():
            content += f"  {role}: {count}\n"
        
        keyboard = get_back_keyboard("admin_panel")
        
        return self.update_chat_message(chat_id, content, keyboard)
    
    def _get_admin_content(self, user_id: int) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
        user_data = storage.get("users.json", str(user_id))
        
        content = "üîê <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>\n\n"
        content += f"üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <b>{user_data.get('first_name', 'Unknown')}</b>\n"
        content += "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
        
        return content
    
    def _get_user_content(self, user_id: int, role: str) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_data = storage.get("users.json", str(user_id))
        
        content = "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
        content += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{user_data.get('first_name', 'Unknown')}</b>\n"
        content += f"üîë –†–æ–ª—å: <b>{role}</b>\n\n"
        content += "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
        
        return content
    
    def _save_chat_message(self, chat_id: int, message_info: Dict[str, Any]):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ —á–∞—Ç–∞ –≤ –ë–î"""
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –±–µ–∑ keyboard (–æ–Ω –Ω–µ —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ JSON)
        save_info = message_info.copy()
        if 'keyboard' in save_info:
            del save_info['keyboard']
        storage.set("chat_messages.json", str(chat_id), save_info)
    
    def _update_chat_message(self, chat_id: int, message_info: Dict[str, Any]):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ —á–∞—Ç–∞ –≤ –ë–î"""
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –±–µ–∑ keyboard (–æ–Ω –Ω–µ —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ—Ç—Å—è –≤ JSON)
        save_info = message_info.copy()
        if 'keyboard' in save_info:
            del save_info['keyboard']
        storage.set("chat_messages.json", str(chat_id), save_info)
    
    def get_chat_message_info(self, chat_id: int) -> Optional[Dict[str, Any]]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ —á–∞—Ç–∞"""
        chat_key = str(chat_id)
        return self._chat_messages.get(chat_key)
    
    def _load_existing_messages(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –ë–î –≤ –∫–µ—à"""
        try:
            existing_messages = storage.get_all("chat_messages.json")
            for chat_id, message_info in existing_messages.items():
                self._chat_messages[chat_id] = message_info
            logger.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(existing_messages)} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–æ–≤")
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    
    def clear_chat_cache(self, chat_id: int = None):
        """–û—á–∏—â–∞–µ—Ç –∫–µ—à —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞"""
        if chat_id:
            chat_key = str(chat_id)
            if chat_key in self._chat_messages:
                del self._chat_messages[chat_key]
                logger.info(f"–ö–µ—à —á–∞—Ç–∞ {chat_id} –æ—á–∏—â–µ–Ω")
        else:
            self._chat_messages.clear()
            logger.info("–í–µ—Å—å –∫–µ—à —á–∞—Ç–æ–≤ –æ—á–∏—â–µ–Ω")