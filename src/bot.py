import logging
from telebot import TeleBot
from telebot.storage.memory_storage import StateMemoryStorage
from telebot.types import Message, CallbackQuery
from .handlers.admin import register_admin_handlers
from .auth import role_manager
from .chat_manager import ChatManager

logger = logging.getLogger(__name__)


class YaEduMerchBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ –¥–ª—è –º–µ—Ä—á–∞ –Ø.–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self, token: str):
        self.bot = TeleBot(token, state_storage=StateMemoryStorage())
        self.chat_manager = ChatManager(self.bot)
        self._register_handlers()
        logger.info("–ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
        # –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã (—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ü–ï–†–í–´–ú–ò)
        self.bot.message_handler(commands=['start'])(self.handle_start)
        self.bot.message_handler(commands=['help'])(self.handle_help)
        self.bot.message_handler(commands=['status'])(self.handle_status)
        self.bot.message_handler(commands=['menu'])(self.handle_menu)
        
        # –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
        register_admin_handlers(self.bot, self.chat_manager)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ (–∏—Å–∫–ª—é—á–∞–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ - –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ admin.py)
        self.bot.callback_query_handler(func=lambda call: not call.data.startswith('admin_'))(self.handle_callback)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (–ü–û–°–õ–ï–î–ù–ò–ú)
        self.bot.message_handler(func=lambda message: True)(self.handle_unknown)
    
    def _check_project_readiness(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ –∫ —Ä–∞–±–æ—Ç–µ"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            from .storage import storage
            users = storage.get_all("users.json")
            chats = storage.get_all("chats.json")
            inventory = storage.get_all("inventory.json")
            settings = storage.get_all("settings.json")
            
            # –ü—Ä–æ–µ–∫—Ç —Å—á–∏—Ç–∞–µ—Ç—Å—è –≥–æ—Ç–æ–≤—ã–º, –µ—Å–ª–∏ –µ—Å—Ç—å:
            # 1. –•–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–¥–º–∏–Ω
            # 2. –•–æ—Ç—è –±—ã –æ–¥–∏–Ω —á–∞—Ç
            # 3. –•–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
            # 4. –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            
            has_admin = any(user.get('role') == 'admin' for user in users.values())
            has_chats = len(chats) > 0
            has_inventory = len(inventory) > 0
            has_settings = len(settings) > 0
            
            return has_admin and has_chats and has_inventory and has_settings
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞: {e}")
            return False
    
    def _get_start_message(self, role: str, project_ready: bool) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞"""
        
        if not project_ready:
            # –ü—Ä–æ–µ–∫—Ç –Ω–µ –≥–æ—Ç–æ–≤
            if role == "admin":
                return ("üîß <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!</b>\n\n"
                       "‚ùå <b>–ü—Ä–æ–µ–∫—Ç –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω</b>\n\n"
                       "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n"
                       "‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–≤ –∏ –ø—Ä–æ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
                       "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —á–∞—Ç—ã\n"
                       "‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å\n"
                       "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n\n"
                       "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞")
            
            elif role == "coordinator":
                return ("üîß <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä!</b>\n\n"
                       "‚ùå <b>–ü—Ä–æ–µ–∫—Ç –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω</b>\n\n"
                       "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
                       "‚Ä¢ –ß–∞—Ç–æ–≤\n"
                       "‚Ä¢ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—è\n"
                       "‚Ä¢ –ë–∞–∑–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\n\n"
                       "–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–∫–∞–∑—ã")
            
            elif role == "promo":
                return ("üì¢ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ü—Ä–æ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!</b>\n\n"
                       "‚ùå <b>–ë–æ—Ç –µ—â–µ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–∫–∞–∑—ã</b>\n\n"
                       "–ü—Ä–æ–µ–∫—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ.\n"
                       "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä—É –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n"
                       "–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–º–æ–≥–∞—Ç—å —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–æ–≤")
            
            else:  # user
                return ("üë§ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n"
                       "‚ùå <b>–ë–æ—Ç –µ—â–µ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–∫–∞–∑—ã</b>\n\n"
                       "–ü—Ä–æ–µ–∫—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ.\n"
                       "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n\n"
                       "–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞–∫–∞–∑—ã")
        
        else:
            # –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤
            if role == "admin":
                return ("üëë <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!</b>\n\n"
                       "‚úÖ <b>–ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!</b>\n\n"
                       "–í—ã –º–æ–∂–µ—Ç–µ:\n"
                       "‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
                       "‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É\n"
                       "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
                       "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–∫–∞–∑—ã\n\n"
                       "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
            
            elif role == "coordinator":
                return ("üîß <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä!</b>\n\n"
                       "‚úÖ <b>–ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!</b>\n\n"
                       "–í—ã –º–æ–∂–µ—Ç–µ:\n"
                       "‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
                       "‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å\n"
                       "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–∫–∞–∑—ã\n\n"
                       "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
            
            elif role == "promo":
                return ("üì¢ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ü—Ä–æ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!</b>\n\n"
                       "‚úÖ <b>–ë–æ—Ç –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã!</b>\n\n"
                       "–í—ã –º–æ–∂–µ—Ç–µ:\n"
                       "‚Ä¢ –ü–æ–º–æ–≥–∞—Ç—å —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–æ–≤\n"
                       "‚Ä¢ –†–∞–±–æ—Ç–∞—Ç—å —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏\n\n"
                       "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
            
            else:  # user
                return ("üë§ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n"
                       "‚úÖ <b>–ë–æ—Ç –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã!</b>\n\n"
                       "–í—ã –º–æ–∂–µ—Ç–µ:\n"
                       "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥\n"
                       "‚Ä¢ –û—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞–∫–∞–∑—ã\n"
                       "‚Ä¢ –í—ã–±–∏—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä—ã –∏ —Ü–≤–µ—Ç–∞\n\n"
                       "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")

    def handle_start(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user_id = message.from_user.id
        username = message.from_user.username or "Unknown"
        first_name = message.from_user.first_name or "Unknown"
        chat_id = message.chat.id
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        role = role_manager.get_user_role(user_id)
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
        if not role_manager.get_user_data(user_id):
            role_manager.add_user(user_id, username, first_name, "user", user_id)
            role = "user"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞
        project_ready = self._check_project_readiness()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        start_text = self._get_start_message(role, project_ready)
        
        # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï (–Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ)
        from .keyboards import get_main_menu_keyboard, get_back_keyboard
        
        if project_ready:
            keyboard = get_main_menu_keyboard(role)
        else:
            keyboard = get_back_keyboard("back_to_main")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        self.bot.send_message(
            chat_id=chat_id,
            text=start_text,
            reply_markup=keyboard,
            parse_mode='HTML'
        )
    
    def handle_help(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        chat_id = message.chat.id
        user_id = message.from_user.id
        
        help_text = "üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:</b>\n\n"
        help_text += "üîê <b>–ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        help_text += "/admin - –ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å\n"
        help_text += "/adduser - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        help_text += "/users - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        help_text += "/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n\n"
        help_text += "üìã <b>–û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        help_text += "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        help_text += "/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        help_text += "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
        help_text += "/status - –í–∞—à —Å—Ç–∞—Ç—É—Å\n\n"
        help_text += "üí° <b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"
        
        # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï
        from .keyboards import get_back_keyboard
        keyboard = get_back_keyboard("back_to_main")
        
        self.bot.send_message(
            chat_id=chat_id,
            text=help_text,
            reply_markup=keyboard,
            parse_mode='HTML'
        )
    
    def handle_status(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status"""
        user_id = message.from_user.id
        chat_id = message.chat.id
        user_data = role_manager.get_user_data(user_id)
        
        if not user_data:
            status_text = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ"
            from .keyboards import get_back_keyboard
            keyboard = get_back_keyboard("back_to_main")
            self.bot.send_message(
                chat_id=chat_id,
                text=status_text,
                reply_markup=keyboard,
                parse_mode='HTML'
            )
            return
        
        status_text = "üìä <b>–í–∞—à —Å—Ç–∞—Ç—É—Å:</b>\n\n"
        status_text += f"üë§ <b>–ò–º—è:</b> {user_data['first_name']}\n"
        status_text += f"üîë <b>–†–æ–ª—å:</b> {user_data['role']}\n"
        status_text += f"üìÖ <b>–î–æ–±–∞–≤–ª–µ–Ω:</b> {user_data['added_at']}\n"
        status_text += f"‚úÖ <b>–ê–∫—Ç–∏–≤–µ–Ω:</b> {'–î–∞' if user_data['is_active'] else '–ù–µ—Ç'}\n"
        
        if user_data['role'] == 'admin':
            status_text += "\nüëë <b>–ü—Ä–∞–≤–∞:</b> –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º"
        elif user_data['role'] == 'coordinator':
            status_text += "\nüîß <b>–ü—Ä–∞–≤–∞:</b> –ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –ø—Ä–æ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        elif user_data['role'] == 'promo':
            status_text += "\nüì¢ <b>–ü—Ä–∞–≤–∞:</b> –ú–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∑–∞–∫–∞–∑–∞–º–∏"
        else:
            status_text += "\nüë§ <b>–ü—Ä–∞–≤–∞:</b> –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        
        # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï
        from .keyboards import get_back_keyboard
        keyboard = get_back_keyboard("back_to_main")
        
        self.bot.send_message(
            chat_id=chat_id,
            text=status_text,
            reply_markup=keyboard,
            parse_mode='HTML'
        )
    
    def handle_menu(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        user_id = message.from_user.id
        chat_id = message.chat.id
        role = role_manager.get_user_role(user_id)
        
        # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
        from .keyboards import get_main_menu_keyboard
        
        menu_text = "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
        menu_text += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{message.from_user.first_name or 'Unknown'}</b>\n"
        menu_text += f"üîë –†–æ–ª—å: <b>{role}</b>\n\n"
        menu_text += "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
        
        keyboard = get_main_menu_keyboard(role)
        
        self.bot.send_message(
            chat_id=chat_id,
            text=menu_text,
            reply_markup=keyboard,
            parse_mode='HTML'
        )
    
    def handle_callback(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤"""
        try:
            # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
            self.bot.answer_callback_query(call.id)
            
            chat_id = call.message.chat.id
            user_id = call.from_user.id
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã callback
            if call.data == "back_to_main":
                self._handle_back_to_main(call)
            elif call.data.startswith("coord_"):
                self._handle_coordinator_callback(call)
            elif call.data.startswith("promo_"):
                self._handle_promo_callback(call)
            elif call.data.startswith("user_"):
                self._handle_user_callback(call)
            elif call.data.startswith("order_"):
                self._handle_order_callback(call)
            else:
                self.bot.answer_callback_query(call.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback {call.data}: {e}")
            self.bot.answer_callback_query(call.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
    
    def _handle_back_to_main(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        user_id = call.from_user.id
        chat_id = call.message.chat.id
        role = role_manager.get_user_role(user_id)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.chat_manager.show_main_menu(chat_id, user_id, role)
    
    def _handle_admin_callback(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω—Å–∫–∏—Ö callback"""
        # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º
        self.bot.answer_callback_query(call.id, "–ê–¥–º–∏–Ω—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è")
    
    def _handle_coordinator_callback(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞"""
        self.bot.answer_callback_query(call.id, "–§—É–Ω–∫—Ü–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–∞")
    
    def _handle_promo_callback(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –ø—Ä–æ–º–æ"""
        self.bot.answer_callback_query(call.id, "–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–º–æ")
    
    def _handle_user_callback(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.bot.answer_callback_query(call.id, "–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    
    def _handle_order_callback(self, call: CallbackQuery):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–∫–∞–∑–æ–≤"""
        self.bot.answer_callback_query(call.id, "–§—É–Ω–∫—Ü–∏—è –∑–∞–∫–∞–∑–∞")
    
    def handle_unknown(self, message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
        from .handlers.admin import _is_waiting_for_id
        
        user_id = message.from_user.id
        chat_id = message.chat.id
        
        # –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞" –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ
        if _is_waiting_for_id(user_id):
            return
        
        unknown_text = "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n\n"
        unknown_text += "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏\n"
        unknown_text += "–ò–ª–∏ /menu –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        
        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
        from .keyboards import get_back_keyboard
        keyboard = get_back_keyboard("back_to_main")
        
        self.chat_manager.update_chat_message(chat_id, unknown_text, keyboard)
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        try:
            self.bot.polling(none_stop=True)
        except KeyboardInterrupt:
            logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: {e}")
            raise
